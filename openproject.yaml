apiVersion: v1
kind: Template
metadata:
  name: openproject
  annotations:
    description: "OpenProject - Online Open-Source Project Management"
    tags: "projectmanagement,openproject"
    iconClass: fa-cloud-upload
    template.openshift.io/provider-display-name: "jngrb"
    template.openshift.io/documentation-url: "https://github.com/jngrb/openproject-openshift/blob/master/README.md"
    template.openshift.io/support-url: "https://github.com/jngrb/openproject-openshift/issues"
parameters:
- name: COMMUNITY_IMAGE_TAG
  description: Tag of the OpenProject Community Docker Image to be deployed
  value: '10.4'
- name: OPENPROJECT_HOST
  description: Application URL of Nextcloud (Route/host)
  required: true
- name: OPENPROJECT_DOCKERFILE_REPO
  description: OpenProject Dockerfile source repository
  value: https://github.com/jngrb/openproject-openshift.git
- name: GIT_BRANCH
  description: branch in source repository
  value: master
- name: PVC_SIZE
  description: PVC size for Apps, Config and Data
  value: 4Gi
- name: SECRET_KEY_BASE
  description: Secret key for the OpenProject instance
  value: dkp-spielwiese
- name: DATABASE_URL
  description: Database reference (usually postgresql)
  value: >-
    postgres://openproject:openproject@postgresql.openproject.svc:5432/openproject
objects:
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    name: openproject-data
  spec:
    accessModes:
    - ReadWriteMany
    resources:
      requests:
        storage: ${PVC_SIZE}
    storageClassName: glusterfs-storage
- apiVersion: v1
  kind: ImageStream
  metadata:
    labels:
      build: community-app
      app: community
    name: community-app
  spec:
    tags:
    - annotations: null
      from:
        kind: DockerImage
        name: community-app:latest
      generation: null
      importPolicy: {}
      name: latest
      referencePolicy:
        type: ""
- apiVersion: v1
  kind: BuildConfig
  metadata:
    creationTimestamp: null
    labels:
      build: community-app
      app: community
    name: community-app
  spec:
    nodeSelector: null
    output:
      to:
        kind: ImageStreamTag
        name: community-app:latest
    postCommit: {}
    resources: {}
    runPolicy: Serial
    source:
      git:
        uri: ${OPENPROJECT_DOCKERFILE_REPO}
        ref: ${GIT_BRANCH}
      type: Git
    strategy:
      dockerStrategy:
        from:
          kind: DockerImage
          name: openproject/community:${COMMUNITY_IMAGE_TAG}
        buildArgs:
          - name: COMMUNITY_IMAGE_TAG
          - value: '${COMMUNITY_IMAGE_TAG}'
      type: Docker
    triggers:
    - type: ConfigChange
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    labels:
      app: community
    name: community
  spec:
    replicas: 1
    selector:
      app: community
      deploymentconfig: community
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        labels:
          app: community
          deploymentconfig: community
      spec:
        nodeSelector:
          appclass: main
        containers:
        - command:
            - /app/docker/uid_entrypoint.sh
          args:
            - ./docker/entrypoint.sh
            - ./docker/web
          env:
            - name: SECRET_KEY_BASE
              value: ${SECRET_KEY_BASE}
            - name: DATABASE_URL
              value: ${DATABASE_URL}
            - name: RAILS_CACHE_STORE
              value: memcache
            - name: CACHE_MEMCACHE_SERVER
              value: 'memcached.openproject.svc:11211'
            - name: PASSENGER_START_TIMEOUT
              value: "240"
          readinessProbe:
            failureThreshold: 3
            initialDelaySeconds: 240
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: 8080
            timeoutSeconds: 5
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 240
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: 8080
            timeoutSeconds: 5
          image: community-app
          imagePullPolicy: Always
          name: community-web
          ports:
            - containerPort: 8080
              protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /var/openproject/assets
              name: openproject-data
              subPath: assets
        - command:
            - /app/docker/uid_entrypoint.sh
          args:
            - ./docker/entrypoint.sh
            - ./docker/worker
          env:
            - name: SECRET_KEY_BASE
              value: ${SECRET_KEY_BASE}
            - name: DATABASE_URL
              value: ${DATABASE_URL}
            - name: RAILS_CACHE_STORE
              value: memcache
            - name: CACHE_MEMCACHE_SERVER
              value: 'memcached.openproject.svc:11211'
            - name: PASSENGER_START_TIMEOUT
              value: "240"
          readinessProbe:
            failureThreshold: 3
            initialDelaySeconds: 240
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: 8080
            timeoutSeconds: 5
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 240
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: 8080
            timeoutSeconds: 5
          image: community-app
          imagePullPolicy: Always
          name: community-worker
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /var/openproject/assets
              name: openproject-data
              subPath: assets
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: openproject-data
          persistentVolumeClaim:
            claimName: openproject-data
    test: false
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - community-web
        - community-worker
        from:
          kind: ImageStreamTag
          name: community-app:latest
      type: ImageChange
    - type: ConfigChange
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: community
    name: community
  spec:
    ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: 8080
    selector:
      app: community
      deploymentconfig: community
    sessionAffinity: None
    type: ClusterIP
- apiVersion: v1
  kind: Route
  metadata:
    labels:
      app: community
    name: community
  spec:
    host: ${OPENPROJECT_HOST}
    port:
      targetPort: http
    to:
      kind: Service
      name: community
      weight: 100
    wildcardPolicy: None
