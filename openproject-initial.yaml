apiVersion: v1
kind: Template
metadata:
  name: openproject-initial
  annotations:
    description: "OpenProject - Online Open-Source Project Management"
    tags: "projectmanagement,openproject"
    iconClass: fa-cloud-upload
    template.openshift.io/provider-display-name: "jngrb"
    template.openshift.io/documentation-url: "https://github.com/jngrb/openproject-openshift/blob/master/README.md"
    template.openshift.io/support-url: "https://github.com/jngrb/openproject-openshift/issues"
parameters:
  - name: COMMUNITY_IMAGE_TAG
    description: Tag of the OpenProject Community Docker Image to be deployed
    value: "10.6"
  - name: OPENPROJECT_HOST
    description: Application URL of Nextcloud (Route/host)
    required: true
  - name: PVC_SIZE
    description: PVC size for Apps, Config and Data
    value: 4Gi
  - name: SECRET_KEY_BASE
    description: Secret key for the OpenProject instance
    value: dkp-spielwiese
  - name: DATABASE_SECRET
    description: Name of the secret with the database reference DATABASE_URL
    value: openproject-database-secret
  - name: APPCLASS
    description: Value of the label appclass specifyng the node where the main POD will run
    value: main
objects:
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      name: openproject-data
    spec:
      accessModes:
        - ReadWriteMany
      resources:
        requests:
          storage: ${PVC_SIZE}
      storageClassName: glusterfs-storage
  - apiVersion: v1
    kind: ImageStream
    metadata:
      labels:
        build: community-initial
        app: openproject
      name: community-initial
    spec:
      tags:
        - annotations: null
          from:
            kind: DockerImage
            name: openproject/community:${COMMUNITY_IMAGE_TAG}
          generation: null
          importPolicy: {}
          name: "${COMMUNITY_IMAGE_TAG}"
          referencePolicy:
            type: Source
  - apiVersion: v1
    kind: DeploymentConfig
    metadata:
      labels:
        app: openproject
      name: community-initial
    spec:
      replicas: 1
      selector:
        app: openproject
        deploymentconfig: community-initial
      strategy:
        activeDeadlineSeconds: 21600
        resources: {}
        rollingParams:
          intervalSeconds: 1
          maxSurge: 25%
          maxUnavailable: 25%
          timeoutSeconds: 600
          updatePeriodSeconds: 1
        type: Rolling
      template:
        metadata:
          labels:
            app: openproject
            deploymentconfig: community-initial
        spec:
          nodeSelector:
            appclass: ${APPCLASS}
          containers:
            - env:
                - name: SECRET_KEY_BASE
                  value: ${SECRET_KEY_BASE}
                - name: DATABASE_URL
                  valueFrom:
                    secretKeyRef:
                      key: DATABASE_URL
                      name: ${DATABASE_SECRET}
                - name: OPENPROJECT_RAILS_CACHE_STORE
                  value: file_store
              image: community-initial
              imagePullPolicy: IfNotPresent
              name: community-initial
              ports:
                - containerPort: 80
                  protocol: TCP
              resources: {}
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
              volumeMounts:
                - mountPath: /var/openproject/assets
                  name: openproject-data
                  subPath: assets
                - mountPath: /var/openproject/pgdata
                  name: community-initial-1
          dnsPolicy: ClusterFirst
          restartPolicy: Always
          securityContext: {}
          serviceAccountName: root-allowed
          terminationGracePeriodSeconds: 30
          volumes:
            - name: openproject-data
              persistentVolumeClaim:
                claimName: openproject-data
            - emptyDir: {}
              name: community-initial-1
      test: false
      triggers:
        - imageChangeParams:
            automatic: true
            containerNames:
              - community-initial
            from:
              kind: ImageStreamTag
              name: community-initial:${COMMUNITY_IMAGE_TAG}
          type: ImageChange
        - type: ConfigChange
  - apiVersion: v1
    kind: Service
    metadata:
      labels:
        app: openproject
      name: community-initial
    spec:
      ports:
        - name: http
          port: 80
          protocol: TCP
          targetPort: 80
      selector:
        app: openproject
        deploymentconfig: community-initial
      sessionAffinity: None
      type: ClusterIP
  - apiVersion: v1
    kind: Route
    metadata:
      labels:
        app: openproject
      name: community-initial
    spec:
      host: ${OPENPROJECT_HOST}
      port:
        targetPort: http
      tls:
        insecureEdgeTerminationPolicy: Redirect
        termination: edge
      to:
        kind: Service
        name: community-initial
        weight: 100
      wildcardPolicy: None
