LoadModule ssl_module /usr/lib/apache2/modules/mod_ssl.so
LoadModule proxy_module /usr/lib/apache2/modules/mod_proxy.so
LoadModule proxy_http_module /usr/lib/apache2/modules/mod_proxy_http.so

<VirtualHost *:8080>
    ServerName SERVER_NAME
    ServerAdmin webmaster@localhost
    DocumentRoot /var/www/html
    
    OIDCCryptoPassphrase OIDC_PASS_PHRASE
    OIDCProviderMetadataURL OIDC_METADATA_URL
    OIDCClientID OIDC_CLIENT_ID
    OIDCClientSecret OIDC_CLIENT_SECRET
    OIDCRedirectURI OIDC_REDIRECT_URL
    OIDCRedirectURLsAllowed ^POST_LOGOUT_REDIRECT_URL
    OIDCRemoteUserClaim OIDC_REMOTE_USER_CLAIM
    # Default is 300 seconds, which is to short for our purposes.
    # Aligned with the Keycloak SSO setting of "SSO Session Idle: 4 Hours",
    # see <services/services-internal.md>, we choose 4 * 60 * 60 = 14400 secs.
    OIDCSessionInactivityTimeout 14400
    # Use the SameSite=Lax flag for session cookies
    OIDCCookieSameSite On

    # API is needed by regular OpenProject UI
    # and hence cannot be taken out.
    # For use of API access token with the OpenProject API,
    # we need an "internal route" bypassing the OIDC proxy.
    #<Location /api>
    #    AuthType None
    #    Allow from all
    #    Satisfy Any
    #</Location>

    # The atom feed is authenticated by OpenProject self.
    # No need to check here for valid authentication
    # Allows non OIDC access with atom key
    <LocationMatch ^\/projects\/.*\/(news|activity)\.atom$>
        AuthType None
        Allow from all
        Satisfy Any
    </LocationMatch>

    <Location />
        AuthType openid-connect
        Require valid-user
        # OIDCScope "openid email"
        # Require claim hd:<your-domain>
    </Location>

    Redirect "/oidc_logout" "OIDC_REDIRECT_URL?logout=POST_LOGOUT_REDIRECT_URL"

    RequestHeader     set  X-Remote-User  "expr=%{REMOTE_USER}:REMOTE_USER_SECRET"

    ProxyPreserveHost On

    #SSLProxyEngine On
    ProxyPass         /oidc_logout !

    ProxyPass         /              PROXY_PASS_LOCATION
    ProxyPassReverse  /              PROXY_PASS_LOCATION
</VirtualHost>
